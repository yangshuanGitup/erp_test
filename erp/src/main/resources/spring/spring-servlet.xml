<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans-4.2.xsd  
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-4.2.xsd  
    http://www.springframework.org/schema/mvc  
	http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
	">

	<context:component-scan base-package="com.singsong.erp.*" />
<!-- 	<mvc:resources mapping="/home/**" location="/home/" />
	<mvc:resources mapping="/assets/**" location="/assets/" />
	<mvc:resources mapping="/view/**" location="/view/" /> -->
	<bean id="schedulerFactoryBean"	class="org.springframework.scheduling.quartz.SchedulerFactoryBean" />	
 	<!-- 支持上传文件 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<!-- 指定所上传文件的总大小,单位字节。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize" value="1124000" />  
    </bean>   	
	<mvc:interceptors>
		<bean class="com.singsong.erp.framework.web.SecurityInteceptor"></bean>
	</mvc:interceptors>
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/view/" />
		<property name="suffix" value=".jsp" />
		<property name="contentType">
			<value>text/html;charset=UTF-8</value>
		</property>
	</bean>
	<mvc:annotation-driven>
		<!-- 下面的这个配置是是为了解决在action中返回是String类的方法,且是通过GET请求来访问的,返回字符串中有中文字符的乱码的解决;对于返回是类型是object(通过jackson来转换的)的则不需要配置utf-8处理 
			,因为GET\POST都能处理中文乱码 还有就是通过resonpse直接写去的中文字符,则需要加response.setContentType("text/html;charset=utf-8")来处理 -->
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=utf-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
</beans>  